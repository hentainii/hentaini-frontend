---
description: 
globs: 
alwaysApply: true
---
Actualiza esta regla si el usuario lo solicita.
# Documento de requisitos del proyecto (PRD): Hentaini

## 0. File creations & Max Line count
Antes de crear cualquier archivo, verifica antes que este mismo no exista ya en el proyecto, o alguno similar. Esto evitara choques con lo que ya hay hecho en este proyecto. Si tienes que crear un archivo antes o modificar uno muy grande, pregunta primero al usuario.
Intenta que cada archivo o componente no supere las 300 linea de codigo, si ves que se acerca a este limite, refactoriza en sub-archivos.



## 1. Proyect Overview

Hentaini es una plataforma web hecha con Nuxt3 y tailwind 4 para el frontend y STRAPI headless CMS para el backend, donde los usuarios podran consultan las ultimas series Hentai de animacion japonesa en una interfaz moderna, simple, rapida, amigable y sin ahogo visual. Podran explorar una amplia variedad de series en la seccion home, buscar su serie preferida en la barra de search y visualizar su informacion unicamente en la pagina serie. La pagina busca ser un top-tier de SEO donde cada serie tenga su presentacion hacia los motores de busqueda bien definida, siguiendo las reglas mas modernas y de vanguardia en optimizacion para motores de busqueda. Ademas siguiendo las practicas de Schema y HTML semantico, con una estructura simple y concisa.

##2. In-Scope vs. Out-of-Scope

**In-Scope:**

* Implementacion de una pagina home.vue donde se visualize una landing page con las secciones definidas en orden, de un Carrusel, Episoios recientes y Series recientes y finalmente un peque√±o FAQ
* Un buscador que muestre al usuario al usuario en forma de desplegable, los resultados de busqueda
* Una seccion Explore para buscar por generos que el usuario pueda explorar para filtrar de forma comoda
* Visualizar la informacion de la serie con una pagina serie.vue, esta usara el sistema de paginas dinamicas de Nuxt /serie/\[slug\].vue
* Optimizacion responsive para correcto visualizado en moviles para TODAS las paginas
* Sistema de conexion con la API de IMDb para complementar la informacion de las peliculas en la base de datos propia

**Out-of-Scope:**
* Recomendaciones personalizadas basadas en gustos

## 3. User Flow

Un nuevo usuario llegara a index.vue o a home.vue y empezara una busqueda por texto o navegando a los titulos mas recientes. Dara click en uno, y este sera llevado a la pagina de informacion de la serie.

## 4. Core Features

**Busqueda De Series**
* El usuario podra buscar peliculas con un buscador de texto

**Seccion Explore con filtros y orden**
* El usuario podra entrar a la seccion generos y filtrar las series por genero
**Filtros**
* El usuario podra ordenar por mayor cantidad de vistas o por mas recientes

## 5. Tech Stack & Tools

**Frontend:**
* Nuxt 3 para generar toda la estructura web
* Nuxt Icons para los iconos
* Nuxt Image para las imagenes 
* i18n con @nuxtjs/i18n para traducciones en tiempo real de la interfaz con selector de lenguajes
* Tailwind 4 para los estilos con la nueva sintaxis en el archivo /assets/css/main.css
* Nuxt fonts para manejo de fuentes
* Nuxt Eslint para el lintado del codigo

**Backend:**
* Strapi 5 con la estrucutra de respuesta sin el uso de la subclave "attributes"

**Starter Kit & Project Structure:**
* Actualmente el proyecto ya cuenta con trabajo iniciado realizado donde esta el esqueleto de la interfaz. Hay (posiblemente, depende de cuando se lea esto) que implementar la conexion con la base de datos y las funcionalidades de busqueda, asi como los filtros y la pagina de busqueda por generos.

## 6. Non-Functional Requirements

**Compilance & Usability:**

* Utiliza Skeleton Loaders para mostrar contenido antes que la respuessta de la base de datos llegue
* Maneja todos los elementos de usabilidad modernos como alts, screen reader support, y demas.
* Utiliza siempre "nuxt-link" para los elementos a para que se aproveche la velocidad de la precarga de paginas de Nuxt





